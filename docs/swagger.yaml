definitions:
  models.CategoryBasic:
    type: object
info:
  contact: {}
paths:
  /category-list:
    get:
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      - description: keyword
        in: query
        name: keyword
        type: string
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: Get list of category
      tags:
      - Admin
  /login:
    post:
      parameters:
      - description: username
        in: formData
        name: username
        type: string
      - description: password
        in: formData
        name: password
        type: string
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: Login
      tags:
      - User
  /problem-create:
    post:
      parameters:
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: title
        in: formData
        name: title
        required: true
        type: string
      - description: content
        in: formData
        name: content
        required: true
        type: string
      - description: category_ids
        in: formData
        name: category_ids
        type: array
      - description: test_cases
        in: formData
        name: test_cases
        required: true
        type: array
      - description: max_runtime
        in: formData
        name: max_runtime
        required: true
        type: integer
      - description: max_mem
        in: formData
        name: max_mem
        required: true
        type: integer
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: CreateProblem
      tags:
      - Admin
  /problem-delete:
    delete:
      parameters:
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: identity
        in: query
        name: identity
        required: true
        type: string
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: DeleteCategory
      tags:
      - Admin
  /problem-detail:
    get:
      consumes:
      - application/json
      parameters:
      - description: problem identity
        in: query
        name: identity
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: Get Detail of problems
      tags:
      - Problem
  /problem-list:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      - description: keyword
        in: query
        name: keyword
        type: string
      - description: category_identity
        in: query
        name: category_identity
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: Get list of problems
      tags:
      - Problem
  /problem-modify:
    put:
      parameters:
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryBasic'
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: ModifyCategory
      tags:
      - Admin
  /rank-list:
    get:
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: Get RankList
      tags:
      - User
  /register:
    post:
      parameters:
      - description: email
        in: formData
        name: email
        required: true
        type: string
      - description: code
        in: formData
        name: code
        required: true
        type: string
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      - description: phone
        in: formData
        name: phone
        required: true
        type: string
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: Register
      tags:
      - User
  /send-code:
    post:
      parameters:
      - description: email
        in: formData
        name: email
        required: true
        type: string
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: SendCode
      tags:
      - User
  /submit-list:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      - description: problem_identity
        in: query
        name: problem_identity
        type: string
      - description: user_identity
        in: query
        name: user_identity
        type: string
      - description: status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: Get list of submits
      tags:
      - Submit
  /user-detail:
    get:
      parameters:
      - description: user identity
        in: query
        name: identity
        type: string
      responses:
        "200":
          description: '{"code":200,"data":""}'
          schema:
            type: string
      summary: Get Detail of Users
      tags:
      - User
swagger: "2.0"
